<?xml version="1.0"?>

<ruleset name="有争议的规则"
         xmlns="http://pmd.sf.net/ruleset/1.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
         xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">

    <description>
        该规则集包含一系列有争议的规则。
    </description>

    <rule name="超级全局变量"
          since="0.2"
          message = "{0} 访问超级全局变量 {1}."
          class="PHPMD\Rule\Controversial\Superglobals"
          externalInfoUrl="#">
        <description>
            <![CDATA[
                直接访问超级全局变量被认为是不好的做法。
                例如，这些变量应该封装在由框架提供的对象中。
            ]]>
        </description>
        <priority>1</priority>
        <properties />
        <example>
            <![CDATA[
                class Foo {
                    public function bar() {
                        $name = $_POST['foo'];
                    }
                }
            ]]>
        </example>
    </rule>

    <rule name="驼峰类名称"
          since="0.2"
          message = "class {0} 没有使用驼峰命名法."
          class="PHPMD\Rule\Controversial\CamelCaseClassName"
          externalInfoUrl="#">
        <description>
            <![CDATA[
                使用驼峰命名法来命名的类被认为是最佳方式。
            ]]>
        </description>
        <priority>5</priority>
        <properties />
        <example>
            <![CDATA[
                class class_name {
                }
            ]]>
        </example>
    </rule>

    <rule name="骆驼属性名称"
          since="0.2"
          message = "属性 {0} 没有使用驼峰命名法."
          class="PHPMD\Rule\Controversial\CamelCasePropertyName"
          externalInfoUrl="#">
        <description>
            <![CDATA[
                使用驼峰命名法来命名的属性被认为是最佳方式。
            ]]>
        </description>
        <priority>5</priority>
        <properties>
            <property name="allow-underscore"
                      description="允许在开始时选择一个可选的下划线。"
                      value="false" />
            <property name="allow-underscore-test"
                      description="允许在测试方法名称中有下划线。"
                      value="false" />
        </properties>
        <example>
            <![CDATA[
                class ClassName {
                    protected $property_name;
                }
            ]]>
        </example>
    </rule>

    <rule name="CamelCaseMethodName"
          since="0.2"
          message = "方法 {0} 没有使用驼峰命名法."
          class="PHPMD\Rule\Controversial\CamelCaseMethodName"
          externalInfoUrl="#">
        <description>
            <![CDATA[
                使用驼峰命名法来命名的方法被认为是最佳方式。
            ]]>
        </description>
        <priority>1</priority>
        <properties>
            <property name="allow-underscore"
                      description="在开始时允许一个可选的单下划线."
                      value="false" />
            <property name="allow-underscore-test"
                      description="是否允许在测试方法名称中使用下划线."
                      value="false" />
        </properties>
        <example>
            <![CDATA[
                class ClassName {
                    public function get_name() {

                    }
                }
            ]]>
        </example>
    </rule>

    <rule name="驼峰参数名"
          since="0.2"
          message = "参数 {0} 没有使用驼峰命名法."
          class="PHPMD\Rule\Controversial\CamelCaseParameterName"
          externalInfoUrl="#">
        <description>
            <![CDATA[
                使用驼峰命名法来命名的形参被认为是最佳方式。
            ]]>
        </description>
        <priority>5</priority>
        <properties />
        <example>
            <![CDATA[
                class ClassName {
                    public function doSomething($user_name) {
                    }
                }
            ]]>
        </example>
    </rule>

    <rule name="驼峰变量"
          since="0.2"
          message = "变量 {0} 没有使用驼峰命名法."
          class="PHPMD\Rule\Controversial\CamelCaseVariableName"
          externalInfoUrl="#">
        <description>
            <![CDATA[
                使用驼峰命名法来命名的变量被认为是最佳方式。
            ]]>
        </description>
        <priority>5</priority>
        <properties />
        <example>
            <![CDATA[
                class ClassName {
                    public function doSomething() {
                        $data_module = new DataModule();
                    }
                }
            ]]>
        </example>
    </rule>
</ruleset>
